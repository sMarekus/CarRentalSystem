@page "/Register"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using BlazorApp.Services
@inject IUserService userService;
@inject IAuthService authService;
<h3>Register</h3>

<div class="card">
<div class="container">
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>First Name:</label>
                <input id="inputFirstName" type="text" class="form-control" @bind="firstName" @bind:event="oninput"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>Last Name:</label>
                <input id="inputLastName" type="text" class="form-control" @bind="lastName" @bind:event="oninput"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>Email:</label>
                <input id="inputEmail" type="text" class="form-control" @bind="email" @bind:event="oninput"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>Password:</label>
                <input id="inputPassword" type="password" class="form-control" @bind="password" @bind:event="oninput"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>CPR Number:</label>
                <input id="inputCprNumber" type="text" class="form-control" @bind="cprNumber" @bind:event="oninput"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>Phone Number:</label>
                <input id="inputPhoneNumber" type="text" class="form-control" @bind="phoneNumber" @bind:event="oninput"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
        <div class="col-md-6">
            <div class="form-group field">
                <label>Admin?</label>
                <input id="inputAdmin" type="checkbox" class="form-check-input" @bind="isAdmin"/>
            </div>
        </div>
    </div>
    
    <div class="row d-flex justify-content-center">
            <div class="col-md-6">
                @if (!string.IsNullOrEmpty(resultMsg))
                    {
                        <label style="color: @color">@resultMsg</label>
                    }
                <div class="button-row">
                    <button @onclick="Create" disabled="@IsRegisterButtonDisabled" class="acceptbtn">Register</button>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private string firstName = "";
    private string lastName = "";
    private string email = "";
    private string password = "";
    private long cprNumber;
    private long phoneNumber;
    private bool isAdmin;
    private string resultMsg = "";
    private string color = "";
    
    
    private bool IsRegisterButtonDisabled => cprNumber==0 || string.IsNullOrWhiteSpace(password) || string.IsNullOrWhiteSpace(firstName) || string.IsNullOrWhiteSpace(lastName);

    
    private async Task Create()
    {
        resultMsg = "";
        color="";

        try
        {
            await userService.CreateAsync(new UserCreationDto(firstName, lastName, email, password, cprNumber, phoneNumber, isAdmin));
            await authService.LoginAsync(cprNumber, password);
            firstName = "";
            lastName = "";
            email = "";
            password = "";
            cprNumber = 0;  
            phoneNumber= 0;
            isAdmin = false;
            resultMsg = "User successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}