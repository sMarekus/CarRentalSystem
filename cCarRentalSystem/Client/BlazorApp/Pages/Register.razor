@page "/Register"
@using Domain.DTOs
@using HttpClients.ClientInterfaces
@using BlazorApp.Services
@inject IUserService userService;
@inject IAuthService authService;
<h3>Register</h3>

<div class="card">
    <h3>Register</h3>
    <div class="form-group field">
        <label>First Name:</label>
        <input type="text" @bind="firstName" @bind:event="oninput"/>
        <label>Last Name:</label>
        <input type="text" @bind="lastName" @bind:event="oninput"/>
        <label>Email:</label>
        <input type="text" @bind="email" @bind:event="oninput"/>
        <label>Password:</label>
        <input type="password" @bind="password" @bind:event="oninput"/>
        <label>Cpr Number:</label>
        <input type="text" @bind="cprNumber" @bind:event="oninput"/>
        <label>Password:</label>
        <input type="text" @bind="phoneNumber" @bind:event="oninput"/>
        <label>Admin?</label>
        <input type="checkbox" @bind="isAdmin"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
    </div>
    <div class="button-row">
        <button @onclick="Create" disabled="@IsRegisterButtonDisabled" class="acceptbtn">Register</button>
    </div>
</div>


@code {
    private string firstName = "";
    private string lastName = "";
    private string email = "";
    private string password = "";
    private long cprNumber=0;
    private long phoneNumber=0;
    private bool isAdmin = false;
    private string resultMsg = "";
    private string color = "";
    
    
    private bool IsRegisterButtonDisabled => cprNumber==0 || string.IsNullOrWhiteSpace(password) || string.IsNullOrWhiteSpace(firstName) || string.IsNullOrWhiteSpace(lastName);

    
    private async Task Create()
    {
        resultMsg = "";
        color="";

        try
        {
            await userService.CreateAsync(new UserCreationDto(firstName, lastName, email, password, cprNumber, phoneNumber, isAdmin));
            await authService.LoginAsync(cprNumber, password);
            firstName = "";
            lastName = "";
            email = "";
            password = "";
            cprNumber = 0;  
            phoneNumber= 0;
            isAdmin = false;
            resultMsg = "User successfully created";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }
}