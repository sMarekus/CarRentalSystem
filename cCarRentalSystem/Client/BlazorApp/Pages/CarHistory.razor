@page "/cars/{carId:int}/reservations-history"
@inject IReservationService reservationService;
@inject ICarService carService;
@using Domain.Models
@using HttpClients.ClientInterfaces
@attribute [Authorize(Policy = "MustBeAdmin")]

<div class="container">
    <div>
    @if (car != null)
    {
        <div class="text-center">
            <h2>@car.Brand @car.Model</h2>
            <p>Reservations History</p>
        </div>
        
        @if (reservations != null && reservations.Any())
        {
            <table class="table table-hover">
                <thead>
                <tr>
                    <th>ID</th>
                    <th>User</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Total Price</th>
                    <th>Status</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var reservation in reservations)
                {
                    <tr>
                        <td>@reservation.Id</td>
                        <td>@reservation.UserName</td>
                        <td>@reservation.StartDate.ToString("yyyy-MM-dd")</td>
                        <td>@reservation.EndDate.ToString("yyyy-MM-dd")</td>
                        <td>@reservation.TotalPrice.ToString("C")</td>
                        <td>@(reservation.IsCompleted ? "Completed" : "Uncompleted")</td>
                    </tr>
                }
                </tbody>
            </table>
        }
        else
        {
            <div class="text-center">
                <h3>No reservations to display.</h3>
            </div>
        }
    }
    else
    {
        <div class="text-center">
            <h3>Car information is not available.</h3>
        </div>
    }
    </div>
</div>


@code {
    [Parameter]
    public int carId { get; set; }

    private Car? car;

    private IEnumerable<Reservation>? reservations;

    protected override async Task OnInitializedAsync()
    {
        car = await carService.GetCarById(carId);

        if (car != null)
        {
            reservations = await reservationService.GetReservationsByCarId(carId);
        }
    }
}